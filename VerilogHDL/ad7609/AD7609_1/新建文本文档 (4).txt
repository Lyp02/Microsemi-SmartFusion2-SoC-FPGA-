always@(posedge Sclk or negedge Start)
     if(!Start)
         begin
         Aout<=72'b0;
         Bout<=72'b0;
         end
     else begin
          a_record<=71-sclk_current;
          b_record<=71-sclk_current; 
          case(sclk_current)
              0:begin
                Aout[71]<=Douta;
                Bout[71]<=Doutb;
                end 
              1:begin
                Aout[70]<=Douta;
                Bout[70]<=Doutb;
                end 
              2:begin
                Aout[69]<=Douta;
                Bout[69]<=Doutb;
                end 
              3:begin
                Aout[68]<=Douta;
                Bout[68]<=Doutb;
                end 
              4:begin
                Aout[67]<=Douta;
                Bout[67]<=Doutb;
                end 
              5:begin
                Aout[66]<=Douta;
                Bout[66]<=Doutb;
                end 
              6:begin
                Aout[65]<=Douta;
                Bout[65]<=Doutb;
                end 
              7:begin
                Aout[64]<=Douta;
                Bout[64]<=Doutb;
                end 
              8:begin
                Aout[63]<=Douta;
                Bout[63]<=Doutb;
                end 
              9:begin
                Aout[62]<=Douta;
                Bout[62]<=Doutb;
                end 
             10:begin
                Aout[61]<=Douta;
                Bout[61]<=Doutb;
                end
             11:begin
                Aout[60]<=Douta;
                Bout[60]<=Doutb;
                end 
              12:begin
                Aout[59]<=Douta;
                Bout[59]<=Doutb;
                end 
              13:begin
                Aout[58]<=Douta;
                Bout[58]<=Doutb;
                end 
              14:begin
                Aout[57]<=Douta;
                Bout[57]<=Doutb;
                end 
              15:begin
                Aout[56]<=Douta;
                Bout[56]<=Doutb;
                end 
              16:begin
                Aout[55]<=Douta;
                Bout[55]<=Doutb;
                end 
              17:begin
                Aout[54]<=Douta;
                Bout[54]<=Doutb;
                end 
              18:begin
                Aout[53]<=Douta;
                Bout[53]<=Doutb;
                end 
              19:begin
                Aout[52]<=Douta;
                Bout[52]<=Doutb;
                            20:begin
                Aout[51]<=Douta;
                Bout[51]<=Doutb;
                end 
              21:begin
                Aout[50]<=Douta;
                Bout[50]<=Doutb;
                end 
             22:begin
                Aout[49]<=Douta;
                Bout[49]<=Doutb;
                end 
              23:begin
                Aout[48]<=Douta;
                Bout[48]<=Doutb;
                end 
              24:begin
                Aout[47]<=Douta;
                Bout[47]<=Doutb;
                end 
              25:begin
                Aout[46]<=Douta;
                Bout[46]<=Doutb;
                end 
              26:begin
                Aout[45]<=Douta;
                Bout[45]<=Doutb;
                end 
              27:begin
                Aout[44]<=Douta;
                Bout[44]<=Doutb;
                end 
              28:begin
                Aout[43]<=Douta;
                Bout[43]<=Doutb;
                end 
              29:begin
                Aout[42]<=Douta;
                Bout[42]<=Doutb;
                end 
             30:begin
                Aout[41]<=Douta;
                Bout[41]<=Doutb;
                end
             31:begin
                Aout[40]<=Douta;
                Bout[40]<=Doutb;
                end 
              32:begin
                Aout[39]<=Douta;
                Bout[39]<=Doutb;
                end 
              33:begin
                Aout[38]<=Douta;
                Bout[38]<=Doutb;
                end 
              34:begin
                Aout[37]<=Douta;
                Bout[37]<=Doutb;
                end 
              35:begin
                Aout[36]<=Douta;
                Bout[36]<=Doutb;
                end 
              36:begin
                Aout[35]<=Douta;
                Bout[35]<=Doutb;
                end 
              37:begin
                Aout[34]<=Douta;
                Bout[34]<=Doutb;
                end 
              38:begin
                Aout[33]<=Douta;
                Bout[33]<=Doutb;
                end 
              39:begin
                Aout[32]<=Douta;
                Bout[32]<=Doutb;
                end    
             40:begin
                Aout[31]<=Douta;
                Bout[31]<=Doutb;
                end
             41:begin
                Aout[30]<=Douta;
                Bout[30]<=Doutb;
                end 
              42:begin
                Aout[29]<=Douta;
                Bout[29]<=Doutb;
                end 
              43:begin
                Aout[28]<=Douta;
                Bout[28]<=Doutb;
                end 
             44:begin
                Aout[27]<=Douta;
                Bout[27]<=Doutb;
                end 
              45:begin
                Aout[26]<=Douta;
                Bout[26]<=Doutb;
                end 
              46:begin
                Aout[25]<=Douta;
                Bout[25]<=Doutb;
                end 
              47:begin
                Aout[24]<=Douta;
                Bout[24]<=Doutb;
                end 
              48:begin
                Aout[23]<=Douta;
                Bout[23]<=Doutb;
                end 
              49:begin
                Aout[22]<=Douta;
                Bout[22]<=Doutb;
              50:begin
                Aout[21]<=Douta;
                Bout[21]<=Doutb;
                end 
              51:begin
                Aout[20]<=Douta;
                Bout[20]<=Doutb;
                end 
             52:begin
                Aout[19]<=Douta;
                Bout[19]<=Doutb;
                end 
              53:begin
                Aout[18]<=Douta;
                Bout[18]<=Doutb;
                end 
              54:begin
                Aout[17]<=Douta;
                Bout[17]<=Doutb;
                end 
              55:begin
                Aout[16]<=Douta;
                Bout[16]<=Doutb;
                end 
              56:begin
                Aout[15]<=Douta;
                Bout[15]<=Doutb;
                end 
              57:begin
                Aout[14]<=Douta;
                Bout[14]<=Doutb;
                end 
              58:begin
                Aout[13]<=Douta;
                Bout[13]<=Doutb;
                end 
              59:begin
                Aout[12]<=Douta;
                Bout[12]<=Doutb;
                end 
             60:begin
                Aout[11]<=Douta;
                Bout[11]<=Doutb;
                end
             61:begin
                Aout[10]<=Douta;
                Bout[10]<=Doutb;
                end 
              62:begin
                Aout[9]<=Douta;
                Bout[9]<=Doutb;
                end 
              63:begin
                Aout[8]<=Douta;
                Bout[8]<=Doutb;
                end 
              64:begin
                Aout[7]<=Douta;
                Bout[7]<=Doutb;
                end 
              65:begin
                Aout[6]<=Douta;
                Bout[6]<=Doutb;
                end 
              66:begin
                Aout[5]<=Douta;
                Bout[5]<=Doutb;
                end 
              67:begin
                Aout[4]<=Douta;
                Bout[4]<=Doutb;
                end 
              68:begin
                Aout[3]<=Douta;
                Bout[3]<=Doutb;
                end 
              69:begin
                Aout[2]<=Douta;
                Bout[2]<=Doutb;
                end 
              70:begin
                Aout[1]<=Douta;
                Bout[1]<=Doutb;
                end 
              71:begin
                Aout[0]<=Douta;
                Bout[0]<=Doutb;
                end 
              default:begin
                Aout<=Aout;
                Bout<=Bout;
                end 
       endcase    
          end